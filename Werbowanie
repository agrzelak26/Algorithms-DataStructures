#include <iostream>
#include <string>
using namespace std;
const long int modulo = 1000003;

struct Person{
    string name;
    unsigned long int timeNeeded;
};

void insertionSort(Person* tab, unsigned long long int n) {
    Person temp;
    int j;
    for (int i=1; i<n; i++) {
        temp = tab[i];
        j = i-1;

        while (j>=0 && ((tab[j].timeNeeded < temp.timeNeeded) || (tab[j].timeNeeded == temp.timeNeeded && tab[j].name > temp.name))) {
            tab[j+1] = tab[j];
            j--;
        }
        tab[j+1] = temp;
    }
}


unsigned long int countMinutes(Person* tab, unsigned long long int n){
    unsigned long int minutes = 0;
    int counter = 0;
    for(int i=0; i<n; i++){
        minutes+= (1 + (counter*tab[i].timeNeeded));
        counter++;
    }
    return minutes;
}


int main(){
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
    unsigned long int t;
    cin >> t;
    cin.ignore();
    for(int i=0; i<t; i++){
        unsigned long long int n, p;
        string name;
        unsigned long int timeNeeded;
        cin >> n >> p;
        cin.ignore();
        Person* tab = new Person[n];
        for(int i=0; i<n; i++){
            cin >> name >> timeNeeded;
            cin.ignore();
            tab[i].name = name;
            tab[i].timeNeeded = timeNeeded;
        }

        insertionSort(tab, n);
        unsigned long int minutes = countMinutes(tab, n) % modulo;

        for(unsigned int i=0; i<p; i++){
            cout << tab[i].name << " ";
        }
        cout << "\n" << minutes << endl;
        delete[] tab;
    }
    return 0;
}
